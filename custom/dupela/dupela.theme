<?php 

use Drupal\Core\Template\Attribute;
use Drupal\Core\Link;

/**
 * Implements hook_update_N().
 */
function dupela_theme_update_9001() {
    // Perform any necessary updates to your theme here.
    // This function will be called when the update is run.
}

function dupela_preprocess(&$variables, $hook) {
    $variables['base_path'] = base_path();
}

/** suggestiong twig */

  

/** Hook Alter suggestion */
/**
 * Implements hook_theme_suggestions_alter().
 */
function dupela_theme_suggestions_alter(array &$suggestions, array $variables, $hook) {
    if ($hook == 'node') {
      $node = $variables['elements']['#node'];
      $suggestions[] = 'node__' . $node->getType() . '__' . $node->bundle() . '__' . $node->id();
    }
  }
/**
 * Implements hook_theme_suggestions_HOOK_alter() for page templates.
 */
function dupela_theme_suggestions_page_alter(array &$suggestions, array $variables) {
    // Get the current path.
    $current_path = \Drupal::service('path.current')->getPath();
  
    // Check if the current path matches the desired path.
    if ($current_path == 'your/custom/path') {
      // Add a theme suggestion for the desired page template.
      $suggestions[] = 'page__custom_template';
    }
  }


/**
 * Implements hook_block_suggestions_alter().
 */
function dupela_theme_suggestions_block_alter(array &$suggestions, array $variables) {
    // Check if the current block is of type 'views_block'.
    // Get the current block.
    $block = $variables['elements']['#id'];
    // Add a suggestion based on the block's ID.
    $suggestions[] = 'block__' . $block;
  }

// breadcrumb
function dupela_theme_suggestions_breadcrumb_alter(array &$suggestions, array $variables) {
    // If you want you can add a template suggestion for all views
    // based on their ID:
    $suggestions[] = sprintf('breadcrumb__dupela_breadcrumbs');
}


// input 
function dupela_theme_suggestions_input_alter(array &$suggestions, array $variables) {
    // If you want you can add a template suggestion for all views
    // based on their ID:
        
    // auto generate suggention for input and submit used in login form username, password and button
    $element = $variables['element'];
  
    if (isset($element['#type']) && $element['#type'] === 'search') {
        $suggestions[] = 'input__search';
    }
 
}
// views view
function dupela_theme_suggestions_views_view_alter(array &$suggestions, array $variables) {

    $view = $variables['view'];
    
    $suggestions[] = 'views_view__' . $view->id();
    
}
function dupela_theme_suggestions_views_view_unformatted_alter(array &$suggestions, array $variables) {

    $view = $variables['view'];

    // Add a suggestion based on the view ID and display ID.
    $suggestions[] = 'views_view_unformatted__' . $view->id() . '__' . $view->current_display;
}


// views view grid
function dupela_theme_suggestions_views_view_grid_alter(array &$suggestions, array $variables) {

    $view = $variables['view'];

    // Add a suggestion based on the view's base table.
    $suggestions[] = 'views_view_grid__' . $view->storage->get('base_table');
  
    // Add a suggestion based on the view's display ID.
    $suggestions[] = 'views_view_grid__' . $view->storage->get('id');
}

/**
 *  @file
 *  writing preprocess_page
 *  using views_embed_view('machine_name','page_title')
 */

/**
 * & - is a reference 
 */

function dupela_preprocess_page(&$variables){
    try {

        $config = \Drupal::config('system.site');
        $variables['site_name'] = $config->get('name');
        $variables['site_slogan'] = $config->get('slogan');
        
    }catch (Exception $e){
        $log_message = 'Error: issue on preprocess page ' . $e->getMessage();
        watchdog('dupela', $log_message, [], WATCHDOG_ERROR);
    }
  

    /** Header Navigation */
    $variables['dupela_icon_navigation'] = views_embed_view('dupela_icon_navigation', 'block_1');

    /** Used in Front Page  */
    $variables['dupela_article_count'] = views_embed_view('dupela_article_count', 'block_1');
    $variables['dupela_article_in_works'] = views_embed_view('dupela_article_in_works', 'block_1');
    $variables['dupela_article_list_home'] = views_embed_view('dupela_article_list_home', 'block_1');
    
    /**Category List */

    $variables['nuggets_category_list'] = views_embed_view('nuggets_category_list', 'block_1');


    /**Related Article  */

    $variables['nuggets_content'] = views_embed_view('related_content', 'block_2');

    //footer and navigation 
    
}

/**
 *  @file
 *  writing preprocess_block
 *  using views_embed_view('machine_name','node_title')
 */

/**
 * & - is a reference 
 */

function dupela_preprocess_node(&$variables){

    // show the node edit link 
    
// Get the node object.
$node = $variables['node'];

    /** Links */
    try {
        // Check if the user has permission to edit the node.
    if ($node->access('update')) {
        // Add an "Edit" link to the node.
        $variables['edit_link'] = \Drupal\Core\Link::createFromRoute(t('Edit'), 'entity.node.edit_form', ['node' => $node->id()]);
        }
    
        // Check if the user has permission to delete the node.
        if ($node->access('delete')) {
        // Add a "Delete" link to the node.
        $variables['delete_link'] = \Drupal\Core\Link::createFromRoute(t('Delete'), 'entity.node.delete_form', ['node' => $node->id()]);
        }
    
        // Check if the user has permission to view the revisions of the node.
        if ($node->access('view revisions')) {
        // Add a "Revisions" link to the node.
        $variables['revisions_link'] = \Drupal\Core\Link::createFromRoute(t('Revisions'), 'entity.node.version_history', ['node' => $node->id()]);
        }
    
        // Add a "View" link to the node.
        $variables['view_link'] = \Drupal\Core\Link::createFromRoute(t('View'), 'entity.node.canonical', ['node' => $node->id()]);
    
    
    
    
    
        /** Buttons */
        // Add a "Edit" link to the node.
        if ($node->access('update')) {
            $variables['edit_button'] = [
                '#type' => 'link',
                '#title' => t('Edit'),  
                '#url' => \Drupal\Core\Url::fromRoute('entity.node.edit_form', ['node' => $node->id()]),
                '#attributes' => [
                    'class' => ['btn', 'btn-primary'],
                ],
    
            ];
        }
    
        // Add a "delete" link to the node.
        if ($node->access('delete')) {
            $variables['delete_button'] = [
                '#type' => 'link',
                '#title' => t('Delete'),  
                '#url' => \Drupal\Core\Url::fromRoute('entity.node.delete_form', ['node' => $node->id()]),
                '#attributes' => [
                    'class' => ['btn', 'btn-primary'],
                ],
    
            ];
        }
    
            // Add a "revisions" link to the node.
            if ($node->access('revisions')) {
                $variables['revisions_button'] = [
                    '#type' => 'link',
                    '#title' => t('Revisions'),  
                    '#url' => \Drupal\Core\Url::fromRoute('entity.node.version_history', ['node' => $node->id()]),
                    '#attributes' => [
                        'class' => ['btn', 'btn-primary'],
                    ],
        
                ];
            }
        
    
    
        // Add a "View" link to the node.
        $variables['view_button'] = [
            '#type' => 'link',
            '#title' => t('View'),  
            '#url' => \Drupal\Core\Url::fromRoute('entity.node.canonical', ['node' => $node->id()]),
            '#attributes' => [
                'class' => ['btn', 'btn-primary'],
            ],
    
        ];

    }catch (Exception $e){
        $log_message = 'Error: issue on preprocess node ' . $e->getMessage();
        watchdog('dupela', $log_message, [], WATCHDOG_ERROR);
    }
    
    /**Related Article  */

    $variables['related_content'] = views_embed_view('related_content', 'block_1');

    
}


/**
 *  @file
 *  writing preprocess_block
 *  using views_embed_view('machine_name','block_title')
 */

/**
 * & - is a reference 
 */

function dupela_preprocess_block(&$variables){

    // Get the site details to display on twig under block
    try{

        $config = \Drupal::config('system.site');
        $variables['site_name'] = $config->get('name');
        $variables['site_slogan'] = $config->get('slogan');


       
    }catch(Exception $e) {
        $log_message = 'Error: issue on preprocess block ' . $e->getMessage();
        watchdog('dupela', $log_message, [], WATCHDOG_ERROR);
    } 

}
/**
 *  @file
 *  writting preprocess_region
 *
 */

function dupela_preprocess_region(&$variables){
   
    $variables['dupela_icon_navigation'] = views_embed_view('dupela_icon_navigation', 'block_1');
    $variables['dupela_article_list_home'] = views_embed_view('dupela_article_list_home', 'block_1');
    $variables['dupela_year_reserved'] = views_embed_view('dupela_year_reserved', 'block_1');

    // Get the site details to display on twig under block
    try {

        $config = \Drupal::config('system.site');

        $variables['site_name'] = $config->get('name');
        $variables['site_slogan'] = $config->get('slogan');
        
    }catch(Exception $e) {
        $log_message = 'Error: issue on preprocess node ' . $e->getMessage();
        watchdog('dupela', $log_message, [], WATCHDOG_ERROR);
    }
    
}



/**
 *  @file
 *  writting preprocess_maintenance_page
 *
 */
function dupela_preprocess_maintenance_page(&$variables) {
    $variables['dupela_icon_navigation_minimal'] = views_embed_view('dupela_icon_navigation_minimal', 'block_1');
    $variables['dupela_year_reserved'] = views_embed_view('dupela_year_reserved', 'block_1');
}

/** 
 * @file
 * Implements  hook_form_alter()
 * 
*/
function dupela_form_alter(&$form, \Drupal\Core\Form\FormStateInterface $form_state, $form_id) {
    // search form
    if (in_array($form_id, ['search_block_form'])) {
        $form['keys']['#attributes']['placeholder'] = t('Search...');
        $form['actions']['submit']['#attributes']['data-twig-suggestion'] = 'search_results_submit';
        //$form['actions']['submit']['#attributes']['id'] = "search_block_form";
        //$form['actions']['submit']['#attributes']['class'] = ['text-color-white', 'fas', 'fa-search'];
        //$form['actions']['submit']['#attributes']['value'] = '#f002';
        
    }
    // login form
    if (in_array($form_id, ['user_login_form'])) {
        $form['name']['#attributes']['data-twig-suggestion'] = 'user_login_form_name';
        $form['pass']['#attributes']['data-twig-suggestion'] = 'user_login_form_pass';
        $form['actions']['submit']['#attributes']['data-twig-suggestion'] = 'user_login_form_action';
    }
    if (in_array($form_id, ['search_form'])) {
        
        $form['basic']['data-twig-suggestion'] = 'input__list__search';
     
    }
    //dump($form);
    
}

